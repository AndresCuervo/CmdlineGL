CC=gcc

.PHONY: all build ShellBindings

OBJ_FILES=SymbolHash.o Server.o ProcessInput.o ParseGL.o Global.o Contained_RBTree.o IntConstHash.autogen.o CmdHash.autogen.o HashFunc.o ImageLoader.o

all: build

build: bin/CmdlineGL ShellBindings bin/CmdlineGL_BashBindings

bin/CmdlineGL: ${OBJ_FILES}
	@if [ ! -d bin ]; then mkdir bin; fi
	${CC} ${CFLAGS} -o bin/CmdlineGL -l${GL_DIR}GL -l${GL_DIR}GLU -l${GL_DIR}glut ${OBJ_FILES}

ShellBindings: CmdlineGLClient *.h
	@echo "-> Remaking all the hardlinks from the CmdlineGLClient script to the command names in bin/"
	@if [ ! -d bin ]; then mkdir bin; fi
	@rm -f bin/gl* bin/cgl*
	@chmod a+rx CmdlineGLClient \
	&& sed -n '/^PUBLISHED(\([^,]*\),.*/s//\1/p' *.h \
	 | while read fn; do ln -f CmdlineGLClient bin/$$fn; done

bin/CmdlineGL_BashBindings: *.h
	@echo "-> Rebuilding the CmdlineGL_BashBindings script-include, which defines a bash function for each available command"
	@if [ ! -d bin ]; then mkdir bin; fi
	@sed -n '/^PUBLISHED(\([^,]*\),.*/s//\1/p' *.h \
	 | while read fn; do echo "$$fn() { echo \"$$fn \$$@\"; }"; done > bin/CmdlineGL_BashBindings

Server.o: Server.c Server.h Global.h
	${CC} ${CFLAGS} -c Server.c

ParseGL.o: ParseGL.c ParseGL.h Global.h
	${CC} ${CFLAGS} -c ParseGL.c

ImageLoader.o: ImageLoader.h ImageLoader.c
	${CC} ${CFLAGS} -c ImageLoader.c

Global.o: Global.c Global.h
	${CC} ${CFLAGS} -c Global.c
	
ProcessInput.o: ProcessInput.c ProcessInput.h Global.h ParseGL.h
	${CC} ${CFLAGS} -c ProcessInput.c

HashFunc.o: HashFunc.c
	${CC} ${CFLAGS} -c -O4 HashFunc.c

SymbolHash.o: SymbolHash.h SymbolHash.c Global.h
	${CC} ${CFLAGS} -c SymbolHash.c

Contained_RBTree.o: Contained_RBTree.c Contained_RBTree.h Global.h
	${CC} ${CFLAGS} -c Contained_RBTree.c

IntConstHash.autogen.o: IntConstHash.autogen.c
	${CC} ${CFLAGS} -c IntConstHash.autogen.c

IntConstHash.autogen.c: HashTableGenUtil ConstList.txt SymbolHash.h Makefile
	@echo "-> Regenerating IntConstHash.autogen.c from the names in ConstList.txt"
	@echo "    (if these aren't right for your system, delete ConstList.txt, make"
	@echo "     ConstList.txt, edit out the bogus ones it found, and then remake)"
	@echo "// This code automatically generated by makefile.  Do not modify." > IntConstHash.autogen.c
	@echo "#include <GL/gl.h>" >> IntConstHash.autogen.c
	@echo "#include <GL/glu.h>" >> IntConstHash.autogen.c
	@echo "#include <GL/glut.h>" >> IntConstHash.autogen.c
	@echo "#include \"SymbolHash.h\"" >> IntConstHash.autogen.c
	@sed 's/GL\(.*\)/\1 (int)(GL\1)/' < ConstList.txt \
	 | ./HashTableGenUtil 1024 IntConstLookup IB IntConstHashEntry >> IntConstHash.autogen.c \
	 || rm IntConstHash.autogen.c

CmdHash.autogen.o: CmdHash.autogen.c
	${CC} ${CFLAGS} -c CmdHash.autogen.c

CmdHash.autogen.c: HashTableGenUtil *.h Makefile
	@echo "-> Regenerating CmdHash.autogen.c from the \"PUBLISHED\" functions in *.h"
	@echo "// This code automatically generated by makefile.  Do not modify." > CmdHash.autogen.c
	@echo "#include \"Server.h\"" >> CmdHash.autogen.c
	@echo "#include \"ParseGL.h\"" >> CmdHash.autogen.c
	@echo "#include \"SymbolHash.h\"" >> CmdHash.autogen.c
	@sed -n '/^PUBLISHED(\([^,]*\),\([^)]*\)).*/s//\1 \2/p' *.h \
 	 | ./HashTableGenUtil 64 CmdLookup CB CmdHashEntry >> CmdHash.autogen.c \
	 || rm CmdHash.autogen.c

HashTableGenUtil: HashTableGenUtil.c HashFunc.c
	${CC} ${CFLAGS} -o HashTableGenUtil HashTableGenUtil.c 

ConstList.txt:
	@echo "-> Scanning GL headers for #define'd constants..."
	@grep "#define" ${GL_INC}/GL/gl.h ${GL_INC}/GL/glu.h ${GL_INC}/GL/glut.h \
	 | sed -n 's/^.*#define[ 	][ 	]*\(GL[^ 	]*\).*/\1/p' \
	 > ConstList.txt
	@echo
	@echo "  ConstList.txt has been generated by grepping your GL header files for"
	@echo "  #define's.  Some constants (particularly things that aren't integers)"
	@echo "  need to be edited out by hand."
	@echo
	@false

clean:
	rm -f *.autogen.c
	rm -f *.o
	rm -rf bin/
	rm -f HashTableGenUtil
