#! /usr/bin/env perl

=head1 DESCRIPTION

Generates static hash table of commands by parsing C source.

=cut

use strict;
use warnings;

my @states;
my %consts;

while (<STDIN>) {
	$_ =~ /(\w+)/ and $consts{$1}= 1;
}

# table size is 2 x number of entries rounded up to power of 2.
my $mask= int(2 * keys %consts);
$mask |= $mask >> 1;
$mask |= $mask >> 2;
$mask |= $mask >> 4;
$mask |= $mask >> 8;
$mask |= $mask >> 16;
my $scan_dist= 4;
my $table_size= $mask+1+$scan_dist;

sub build_table {
	my ($mul, $shift)= @_;
	my @table= (undef) x $table_size;
	name: for my $k (keys %consts) {
		my $bucket= hash_fn($k, $mul, $shift);
		for (0..$scan_dist) {
			if (!defined $table[$bucket+$_]) {
				$table[$bucket+$_]= $k;
				next name;
			}
		}
		return undef;
	}
	return \@table;
}

sub find_collisionless_hash_params {
	# pick factors for the hash function until each command has a unique bucket
	for (my $mul= 1; $mul < $table_size*$table_size; $mul++) {
		for (my $shift= 0; $shift < 5; $shift++) {
			my $table= build_table($mul, $shift);
			return ( $table, $mul, $shift )
				if $table;
		}
	}
	die "No value of \$shift / \$mul results in unique codes for each command\n";
}

my ($table, $mul, $shift)= find_collisionless_hash_params();

my $n_cmd= keys %consts;
my $table_items= join("\n", map {
	defined $_? qq|	{ "$_", (long)($_) },| : qq|	{ NULL, 0 },|
	} @$table );

sub hash_fn {
	my ($string, $mul, $shift)= @_;
	use integer;
	my $i32_mask= (1<<(32-$shift))-1;
	my $result= 0;
	$result= ((($result * $mul) >> $shift) & $i32_mask) + ($_ << 4)
		for unpack( 'C' x length($string), $string );
	return $result & $mask;
}

print <<END;
// File generated by $0
//
// $n_cmd constants
// table size is $table_size, mul is $mul, shift is $shift
#include "config.h"
#include <inttypes.h>
#include "GlHeaders.h"
#include "ProcessInput.h"
#include "SymbolHash.h"

int IntConstHashFunc(const char *name) {
	uint32_t x= 0;
	while (*name)
		x= ((x * $mul) >> $shift) + ((*name++ & 0xFF) << 4);
	
	return x & $mask;
}

const int IntConstHashTableSize= $table_size;
const IntConstHashEntry IntConstHashTable[]= {
$table_items
	{ NULL, 0 }
};
END
