.PHONY: all build

CC = @CC@
CFLAGS = -I. @CFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
INSTALL = @INSTALL@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = $(exec_prefix)/bin
libdir = $(prefix)/lib
infodir = $(prefix)/info

DEF_CC_CMD=${CC} ${CFLAGS} ${CPPFLAGS} `sdl-config --cflags`

ALL_HEADERS=*.h
COMMAND_SOURCES:=$(shell grep -l COMMAND *.c)
OBJ_FILES=SymbolHash.o Server.o ProcessInput.o ParseGL.o Global.o Contained_RBTree.o IntConstHash.autogen.o CmdHash.autogen.o ImageLoader.o Font.o Version.o

all: build

$(OBJ_FILES): Makefile

Makefile: Makefile.in
	@echo Makefile is out of date, regenerating Makefile from Makefile.in
	if [ -f ./config.status ]; then ./config.status; else ./configure; fi

build: bin/CmdlineGL

bin/CmdlineGL: ${OBJ_FILES}
	@if [ ! -d bin ]; then mkdir bin; fi
	$(CC) $(CFLAGS) -o bin/CmdlineGL $(OBJ_FILES) $(LDFLAGS) `sdl-config --libs` $(LIBS)
	# strip bin/CmdlineGL

Server.o: Server.c Server.h Global.h Version.h
	${DEF_CC_CMD} -c Server.c

ParseGL.o: ParseGL.c ParseGL.h Global.h
	${DEF_CC_CMD} -c ParseGL.c

Font.o: Font.c Font.h Global.h
	$(DEF_CC_CMD) -c Font.c

ImageLoader.o: ImageLoader.h ImageLoader.c ParseGL.h Global.h
	${DEF_CC_CMD} -c ImageLoader.c

Version.o: Version.autogen.c
	${DEF_CC_CMD} -c Version.autogen.c -o Version.o

Version.autogen.c Version.parts:
	./build-version.sh

Global.o: Global.c Global.h
	${DEF_CC_CMD} -c Global.c

ProcessInput.o: ProcessInput.c ProcessInput.h ParseGL.h Global.h
	${DEF_CC_CMD} -c ProcessInput.c

SymbolHash.o: SymbolHash.h SymbolHash.c Global.h
	${DEF_CC_CMD} -c SymbolHash.c

Contained_RBTree.o: Contained_RBTree.c Contained_RBTree.h Global.h
	${DEF_CC_CMD} -c Contained_RBTree.c

IntConstHash.autogen.o: IntConstHash.autogen.c Global.h
	${DEF_CC_CMD} -c IntConstHash.autogen.c

IntConstHash.autogen.c: build-consthash.pl ConstList.txt Makefile SymbolHash.h ProcessInput.h
	@echo "-> Regenerating IntConstHash.autogen.c from the names in ConstList.txt"
	./build-consthash.pl <ConstList.txt >IntConstHash.autogen.c

CmdHash.autogen.o: CmdHash.autogen.c Global.h
	${DEF_CC_CMD} -c CmdHash.autogen.c

CmdHash.autogen.c: build-cmdhash.pl Makefile ${COMMAND_SOURCES} SymbolHash.h ProcessInput.h
	@echo "-> Regenerating CmdHash.autogen.c from the \"COMMAND\" functions in *.c"
	cat ${COMMAND_SOURCES} | ./build-cmdhash.pl > CmdHash.autogen.c

ConstList.txt:
	@echo "-> Attempting to get the useful #define'd constants from your GL headers..."
	@cat ConstList.works_on_my_box\
	 | bash -c '\
		echo "#include \"config.h\"";\
		echo "#include \"GlHeaders.h\"";\
		echo "#include \"SDLHeaders.h\"";\
		while read ConstName;\
			do echo "#ifdef $$ConstName";\
			echo "validconst_$$ConstName";\
			echo "#endif";\
		done\
	   '\
	 | cpp ${CFLAGS} ${CPPFLAGS} `sdl-config --cflags` | tee cpp-out.txt | grep validconst_\
	 | sed -e 's/validconst_\(.*\)$$/\1/' > ConstList.txt
	@echo
	@echo "  ConstList.txt has been generated by taking my own machine's valid list of #defines"
	@echo "  and running it through your preprocessor.  This is rather an extreme hack in the"
	@echo "  name of automatic compatibility.  Hopefully it works for you."
	@echo "  If not, try grepping your GL header files for #define GL*, and put the name of every"
	@echo "  constant you'd like to have at runtime into the ConstList.txt file."
	@echo "  Note that CmdlineGL can only use integer constants, and not all GL_* are."
	@echo "  Also beware: 'make clean' will remove it!"
	@echo

install: bin/CmdlineGL
	if [ ! -d @bindir@ ]; then install -d @bindir@; fi	
	install bin/CmdlineGL @bindir@

dist: bin/CmdlineGL
	@echo "Note: Update Changes and git tag to change version"
	@( read major minor release andstuff < Version.parts; \
	   DistName="CmdlineGL-$$major.$$minor.$$release";
	   if [ -n "$andstuff" ]; then echo "Warning: unofficial release"; DistName="$DistName-$andstuff"; fi; \
	   echo "Generating clean dist"; \
	   [ -d "$DistName" ] && { echo "Error: directory $$DistName already exists"; exit 1; }; \
	   git --work-dir="$$DistName" checkout . \
	   && echo "Including configure script and generated files" \
	   && autoheader && autoconf && cp config.h.in configure "$$DistName/" \
	   && bzip2 "$$DistName.tar.bz2" "$$DistName" \
	   && echo "Release tarball is $$DistName.tar.bz2"; \
	)

clean:
	rm -f *.autogen.c
	rm -f *.o
	rm -f ConstList.txt
	rm -rf bin/
	rm -f HashTableGenUtil

distclean: clean
	rm configure config.status config.log
	rm -r autom4te.cache
	rm config.h config.h.in
	rm Makefile
